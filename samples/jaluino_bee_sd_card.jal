-- Title: Sample showing usage of PPS module for Jaluino Bee, 18F27J53 based
-- Author: SÃ©bastien Lelong, Copyright (c) 2011, all rights reserved.
-- Adapted-by:
-- Compiler: 2.4o
-- Revision: $Revision$
--
-- This file is part of jaluino  (http://jaluino.googlecode.com)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--
-- Description: SD-Card demo, running MSSP2 with PPS module:
-- - RBO / RP3: /SS2 (I)
-- - RA5 / RP2: SCK2 (I & O)
-- - RB2 / RP5: SDI2 (I)
-- - RB3 / RP6: SDO2 (O)
-- Sample will write incrementing values, beginning at sector 20. Once written,
-- it'll read them back and check values. If value is correct, LED is blinking fast.
-- You can also check SD-card content, running "hexdump -v -C /dev/<sdcard-device> | less"
-- under Linux, or something similar under Windows.
-- You'll see values at address 0x2800 (which 20 sectors * 512 bytes = 10240 = 0x2800)
-- .
-- Expected behavior:
-- 1. LED is flashing once (write bytes)
-- 2. small delay
-- 3. LED is blinking very fast, for ~20 seconds (read and check values)
-- 4. LED is blinking sloooowly for 5 seconds (pause before restarting)
--
--

-- we plan to use SD-Card so tell the main library to 
-- configure remappable pins and create appropriate aliases
const byte ENABLE_MSSP2_SDCARD = 1

include jaluino_bee
include print
include delay

onboard_led_direction = output

-- variables for the sample
var word step1
var byte counter = 0
var byte volatile data

onboard_led = off

forever loop

   -- 1st write...
   onboard_led = on
   sd_start_write(20)         -- get sd card ready for write at sector 20
   for 512 + 256 loop         -- loop 1 sector + 1 half sector (512 + 256 bytes)
     sd_data_byte = counter   -- write 1 bytes of data
     counter = counter + 1
   end loop
   sd_stop_write()            -- tell sd card you are done reading
   onboard_led = off
   delay_1ms(500)

   -- then 2nd read & check
   counter = 0
   sd_start_read(20)          -- get sd card ready for read at sector 20
   for 512 + 256 loop         -- loop 1 sector + 1 half sector (512 + 256 bytes)
      data = sd_data_byte       -- read 1 bytes of data
      if data == counter then
         delay_1ms(30)
         onboard_led = !onboard_led
      end if
      counter = counter + 1
   end loop
   sd_stop_read()             -- tell sd card you are done reading

   -- slow blink before next R/W cycle
   for 5 loop
      delay_1s(1)
      onboard_led = !onboard_led
   end loop

end loop

