-- -----------------------------------------------------------------------------
-- Title: demo of usb_serial library
-- Author: Albert Faber, Copyright (c) 2009, all rights reserved.
-- Adapted-by:
-- Compiler: >=2.4n
-- 
-- This file is part of jallib (http://jallib.googlecode.com)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
-- 
-- Description: This application demonstrates USB Serial library, this application 
-- will emulate a RS-232 terminal device. Once the USB device has been detected by the 
-- host operating system, it will create a virtual COM port. When opening this COM
-- on the host computer, using a standard terminal application, it should show a
-- welcome message, after the welcome message all input characters are echoed back
-- to the terminal application
-- --
-- 
-- Sources: http://www.usb.org for USB specifications
-- 
-- Some instructions for use:
-- -
-- 1. Make sure you logon as administrator, or with administrator privileges,
--    on Windows XP.
-- 2. If needed convert to the correct PIC device (change include file), 
--    adapt fuses and speed
-- 3. Create a basic board with USB PIC device
-- 4. Compile the this file and program the hex file into the PIC.
-- 5. After a (short) while you'll get the "new hardware found" message for
--    "JALLIB Serial". Point Windows manually to the driver in the
--    driver directory xp_drivers The drivers can be found at:
--    http://groups.google.com/group/jallib/ (usb_cdc_drivers_winxp32.zip)
--    Ignore the warning that this driver doesn't have a certificate. 
--    Wait for the installation to complete.
-- 6. Open the Windows Device Manager and check out the "ports" section. A new
--    communications port will be there, with a COM number.
-- 7. Open a terminal program (for example HyperTerminal) and select the COM
--    port you found in the previous step. Pick any baudrate, Windows will
--    accommodate automatically, and use 8-N-1-no for the other settings.
-- 8. Press enter and read the message. Now everything you type will be echoed
--    back.
-- 9. Have fun, adapt to your needs
--

include jaluino_bee
include delay

onboard_led_direction = output

onboard_led = high
delay_1s(1)
onboard_led = low

include print
include usb_serial

-- constants
const byte str_welcome[] = "JALLIB USB Serial Demo app\n"

-- setup the USB serial library
usb_serial_init()

var bit has_shown_welcome_msg = true
var byte ch

-- main loop
forever loop
   -- poll the usb ISR function on a regular base, in order to 
   -- serve the USB requests
   usb_serial_flush()
   
   -- check if USB device has been configured by the HOST
   if ( usb_cdc_line_status() !=  0x00 )  then
      if !has_shown_welcome_msg then
         has_shown_welcome_msg = true
         print_string( usb_serial_data, str_welcome )
         onboard_led = high
      end if	
   else
      has_shown_welcome_msg = false
      onboard_led = low
   end if
   
   -- check for input character
   if usb_serial_data_available then
      -- echo input character
      usb_serial_data = usb_serial_data
   end if
   
end loop
