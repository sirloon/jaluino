-- Title: Minix v2 filesystem over SD-card, for Jaluino Bee, 18F27J53 based
-- Author: SÃ©bastien Lelong, Copyright (c) 2011, all rights reserved.
-- Adapted-by:
-- Compiler: 2.4o
--
-- This file is part of jaluino  (http://jaluino.googlecode.com)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--
-- Description: Minix demo (dev)
--
--

-- we plan to use SD-Card so tell the main library to 
-- configure remappable pins and create appropriate aliases
const byte ENABLE_MSSP2_SDCARD = 1

include jaluino_bee
include print
include delay
include jascii
include strings

onboard_led_direction = output
onboard_led = off

const serial_hw_baudrate = 115_200
include serial_hardware
serial_hw_init()

alias minix_goto_address is sd_start_read
alias minix_close_block is sd_stop_read
alias minix_data_byte is sd_data_byte -- get|put byte
alias minix_print_carrier is serial_hw_data
include minixfs

const byte WELCOME[] = "Minix demo"
const byte PROMPT[] = "minix> "
print_string(serial_hw_data,WELCOME)
print_crlf(serial_hw_data)

-- some sort of "mount"
minix_init(true)

function atoi(byte in nums[]) return byte is
   var byte num = 0
   var byte numdec = 0
   numdec = nums[0] -- blocking
   num = nums[1]
   if num == ASCII_NULL then
      num = numdec
      numdec = "0"
   end if
   return byte(((numdec - "0") * 10) + (num - "0"))
end function

-- Minix commands for REPL impl.
const byte MINIX_FSCK_CMD[] = "fsck\0"
const byte MINIX_DOLLARQ_CMD[] = "$?\0"
const byte MINIX_CAT_CMD[] = "cat\0"
const byte MINIX_DCAT_CMD[] = "dcat\0"
const byte MINIX_CD_CMD[] = "cd\0"
const byte MINIX_LS_CMD[] = "ls\0"
   
var byte command[16]
var byte filename[MINIX_MAX_FILENANE_LEN]
var byte char
var byte i
forever loop

   -- print prompt :)
   print_string(serial_hw_data,PROMPT)

   -- read command
   i = 0
   while true  loop
      char = serial_hw_data
      -- echo
      serial_hw_data = char
      if char == ASCII_LF | char == ASCII_CR | char == ASCII_SP then
         exit loop
      end if
      command[i] = char
      i = i + 1
   end loop
   command[i] = ASCII_NULL -- NULL terminated string

   -- read filename if necessary
   if char == ASCII_SP then
      i = 0
      while true  loop
         char = serial_hw_data
         -- echo
         serial_hw_data = char
         if char == ASCII_LF | char == ASCII_CR | char == ASCII_SP then
            exit loop
         end if
         filename[i] = char
         i = i + 1
      end loop
      filename[i] = ASCII_NULL -- NULL terminated string
   end if

   if char == ASCII_LF | char == ASCII_CR | char == ASCII_SP then
      print_crlf(serial_hw_data)
   end if

   if command[0] != ASCII_NULL then
      if strcmp(command,MINIX_FSCK_CMD) then
         minix_dev_print_super_block()
      end if
      if strcmp(command,MINIX_DOLLARQ_CMD) then
         minix_dev_print_error()
      end if
      if strcmp(command,MINIX_CD_CMD) then
         minix_cdi(atoi(filename))
      end if
      if strcmp(command,MINIX_CAT_CMD) then
         minix_cati(atoi(filename))
      end if
      if strcmp(command,MINIX_DCAT_CMD) then
         minix_dev_cati(atoi(filename))
      end if
      if strcmp(command,MINIX_LS_CMD) then
         minix_lsi(atoi(filename))
      end if
   end if

end loop

