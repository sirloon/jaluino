-- Title: Minix v2 filesystem over SD-card, for Jaluino Bee, 18F27J53 based
-- Author: SÃ©bastien Lelong, Copyright (c) 2011, all rights reserved.
-- Adapted-by:
-- Compiler: 2.4o
--
-- This file is part of jaluino  (http://jaluino.googlecode.com)
-- Released under the BSD license (http://www.opensource.org/licenses/bsd-license.php)
--
-- Description: Minix demo (dev)
--
--

-- we plan to use SD-Card so tell the main library to 
-- configure remappable pins and create appropriate aliases
const byte ENABLE_MSSP2_SDCARD = 1

include jaluino_bee
include print
include delay
include jascii

onboard_led_direction = output
onboard_led = off

const serial_hw_baudrate = 115_200
include serial_hardware
serial_hw_init()

alias minix_goto_address is sd_start_read
alias minix_close_block is sd_stop_read
alias minix_data_byte is sd_data_byte -- get|put byte
alias minix_print_carrier is serial_hw_data
include minixfs

const byte WELCOME[] = "Minix demo"
print_string(serial_hw_data,WELCOME)
print_crlf(serial_hw_data)

-- some sort of "mount"
minix_init(true)
minix_dev_print_super_block()
minix_dev_print_error()

-- walk inodes and display internal guts
var minix_inode inode
inode = minix_get_inode(MINIX_INODE_ROOT_ID) 
var byte inode_num = 2
while inode.mode.filetype != 0 loop
   minix_dev_print_inode(inode)
   inode = minix_get_inode(inode_num) 
   inode_num = inode_num + 1
end loop

const byte STR_NO_MORE[] = "No more contiguous inodes found"
print_string(serial_hw_data,STR_NO_MORE)
print_crlf(serial_hw_data)
   
forever loop

   const byte STR_ROOT_LISTING[] = "Root content directory:"
   print_string(serial_hw_data,STR_ROOT_LISTING)
   print_crlf(serial_hw_data)

   -- open root directory and list content
   var minix_dir_entry entry
   minix_open(MINIX_INODE_ROOT_ID)
   entry = minix_next_entry
   while entry.inode_num != 0 loop
      minix_dev_print_dir_entry(entry)
      print_crlf(serial_hw_data)
      entry = minix_next_entry 
   end loop
   minix_close()

   print_crlf(serial_hw_data)

   const byte STR_CHOOSE[] = "Enter inode number to display file's content: "
   print_string(serial_hw_data,STR_CHOOSE)
   -- atoi
   var byte num = 0
   var byte numdec = 0
   var byte data = 0
   numdec = serial_hw_data -- blocking
   serial_hw_data = numdec -- echo   
   num = serial_hw_data
   serial_hw_data = num -- echo
   if num == ASCII_LF | num == ASCII_CR then
      num = numdec
      numdec = "0"
   else
      data = serial_hw_data   -- wait for any key
      serial_hw_data = data   -- echo
   end if
   inode_num = ((numdec - "0") * 10) + (num - "0")

   const byte STR_CONTENT[] = "Content for file pointed by inode #"
   print_string(serial_hw_data,STR_CONTENT)
   print_byte_dec(serial_hw_data,inode_num)
   print_crlf(serial_hw_data)
   minix_cat(inode_num)   -- file8K #inode
   print_crlf(serial_hw_data)

end loop

