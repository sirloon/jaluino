-- Title: Delays procedures at any processor frequency
-- Author: Stef Mientki, Copyright (c) 2002..2006, all rights reserved.
-- Adapted-by: Sebastien Lelong, Rob Hamerling.
-- Compiler: >=2.4g
--
-- This file is part of jallib (http://jallib.googlecode.com)
-- Released under the ZLIB license (http://www.opensource.org/licenses/zlib-license.html)
--
-- Description: library for delays at any processor frequency.
-- It's based on the JAL v2 compiler generator _usec_delay.
--
-- Fixed delays for the short intervals:
--   delay_1us(), delay_2us(), delay_3us(), delay_4us(), delay_5us(),
--   delay_6us(), delay_7us(), delay_8us(), delay_9us()
-- These procedures are 'inline' and are as accurate as the ocillator source.
--
-- For the longer delays, procedure with parameter N  ( 1.. 255)
--   delay_10us(n)
--   delay_1ms(n)
--   delay_100ms(n)
-- These procedures are due to call/return overhead slightly clock
--  frequency dependent.

-- fixed delay of 1 usec (no arguments)
procedure delay_1us() is
  pragma inline
  asm  nop ; this delay has been optimized by @use_virtual_delay annotation
end procedure

-- fixed delay of 2 usec (no arguments)
procedure delay_2us() is
  pragma inline
  asm  nop ; this delay has been optimized by @use_virtual_delay annotation
end procedure

-- fixed delay of 3 usec (no arguments)
procedure delay_3us() is
  pragma inline
  asm  nop ; this delay has been optimized by @use_virtual_delay annotation
end procedure

-- fixed delay of 4 usec (no arguments)
procedure delay_4us() is
  pragma inline
  asm  nop ; this delay has been optimized by @use_virtual_delay annotation
end procedure

-- fixed delay of 5 usec (no arguments)
procedure delay_5us() is
  pragma inline
  asm  nop ; this delay has been optimized by @use_virtual_delay annotation
end procedure

-- fixed delay of 6 usec (no arguments)
procedure delay_6us() is
  pragma inline
  _usec_delay(6)
end procedure

-- fixed delay of 7 usec (no arguments)
procedure delay_7us() is
  pragma inline
  asm  nop ; this delay has been optimized by @use_virtual_delay annotation
end procedure

-- fixed delay of 8 usec (no arguments)
procedure delay_8us() is
  pragma inline
  asm  nop ; this delay has been optimized by @use_virtual_delay annotation
end procedure

-- fixed delay of 9 usec (no arguments)
procedure delay_9us() is
  pragma inline
  asm  nop ; this delay has been optimized by @use_virtual_delay annotation
end procedure
                
-- Delays for n * 10 usec
procedure delay_10us(byte in n) is
  asm  nop ; this delay has been optimized by @use_virtual_delay annotation
end procedure

-- Delays for n * 1 msec
procedure delay_1ms(word in n) is
  asm  nop ; this delay has been optimized by @use_virtual_delay annotation
end procedure

-- Delays for n * 100 msec
procedure delay_100ms(word in n) is
  asm  nop ; this delay has been optimized by @use_virtual_delay annotation
end procedure

-- Delays for n * 1 sec
procedure delay_1s(word in n) is
  asm  nop ; this delay has been optimized by @use_virtual_delay annotation
end procedure


